package ParallelMinimalPointCalculations;

import java.util.*;

public class Calculator {
	public static List<Point> generatePoints(){
		List<Point> points = new ArrayList<>();
		Random rand = new Random();
		
		for(int i = 0 ; i < 100_000 ; i++){
			points.add(new Point(rand.nextInt(10_000), rand.nextInt(10_000)));
		}
		
		return points;
	}
	
	public static Map<Point,Point> getNearestPoints(List<Point> generatedPoints){
		Map<Point, Point> result = new HashMap<>();
		
//		doCalculations(generatedPoints, 0, generatedPoints.size()-1, result);
		
		
		
		return result;
		
	}
	
	static void doCalculations(List<Point> inPoints, int indexFrom, int indexTo, Map<Point, Point> outMap){
		double minDistance = 0;
		double currDistance;
		Point closest = null;
		
		for(int i = indexFrom ; i <= indexTo ; i++){
			minDistance = Double.MAX_VALUE;
			for(int j = indexFrom + 1; j <= indexTo ; j++){
				if(inPoints.get(j).equals(inPoints.get(i))){
					continue;
				}
				
				currDistance = inPoints.get(j).getDistance(inPoints.get(i));
				
				if(currDistance < minDistance){
					minDistance = currDistance;
					closest = inPoints.get(j);
				}
			}
			
			outMap.put(inPoints.get(i), closest);
		}
	}
}
