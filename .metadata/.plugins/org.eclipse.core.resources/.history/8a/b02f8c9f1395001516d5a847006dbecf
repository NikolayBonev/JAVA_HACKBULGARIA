package WednesdayOOP.StackEm;

import java.util.ArrayList;
	
public class StackImpl<E> implements Stack{
	
	private class Node<E>{
		Node<E> prevNode;
		E item;
		
		public Node() {
			prevNode = null;
			item = null;
		}
		
		public Node(E item){
			this();
			
			if(item == null){
				throw new NullPointerException();
			}else{
				this.item = item;
			}
		}

		public E getItem() {
			return this.item;
		}

		public void setItem(E item) {
			this.item = item;
		}
	}
	
	public StackImpl() {

	}
	
	public StackImpl(int capacity){

	}
	


	@Override
	public void push(Object obj) {

	}
	@Override
	public Object pop() {

	}
	@Override
	public void clear() {

	}
	@Override
	public Object peek() {

	}
	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	public void equals() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}
	
	
}
