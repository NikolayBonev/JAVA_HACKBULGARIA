
public class Task33_100SMS {
	
	static char decodeNumbers(int number, int timesPressed){
		
		String lettersInButton = "";
		
		switch (number) {
		case 2:
			lettersInButton = "abc";
			break;
		case 3:
			lettersInButton = "def";
			break;
		case 4:
			lettersInButton = "ghi";
			break;
		case 5:
			lettersInButton = "jkl";
			break;
		case 6:
			lettersInButton = "mno";
			break;
		case 7:
			lettersInButton = "pqrs";
			break;
		case 8:
			lettersInButton = "tuv";
			break;
		case 9:
			lettersInButton = "wxyz";
			break;
		}
		
		timesPressed = (timesPressed-1)%lettersInButton.length();
				
		return lettersInButton.charAt(timesPressed);
	}
	
	static String numbersToMessage(int[] pressedSequence){
		
		StringBuilder message = new StringBuilder();
		boolean capital = false;
		
		for(int i = 0 ; i < pressedSequence.length ; i++){	
			switch (pressedSequence[i]) {
			case 0:
				message.append(" ");
				break;
			case 1:
				capital = true;
				break;
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:{
				int counter = 1;
				
				for(int j = i+1; j < pressedSequence.length ; j++){
					if(pressedSequence[i] == pressedSequence[j]){
						counter++;
					}else if(pressedSequence[j] == -1 || pressedSequence[i] != pressedSequence[j]){
						break;
					}
				}
				
				char ch = decodeNumbers(pressedSequence[i], counter);
				
				if(capital){
					ch = Character.toUpperCase(ch);
					capital = false;
				}
				
				i += counter;
				message.append(ch);
			}
			}
		}
		
		return message.toString();
	}
}
